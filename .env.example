# --------------------------------------------------------------
# munkireport-php phpdotenv configuration file.
#
# Module specific variables should contain the module prefix.
# --------------------------------------------------------------

# DATABASE
# --------
# NOTE: If you have modified app/config/db.php in your local installation, you must port the settings to either .env,
# the runtime environment, or config/database.php
CONNECTION_DRIVER="sqlite"
# DB_CONNECTION=sqlite  # Laravel 7
#CONNECTION_DATABASE="/path/to/your/custom/db/db.sqlite"

# MunkiReport KISSMVC Model / Capsule
#CONNECTION_DRIVER="mysql"
#CONNECTION_HOST="127.0.0.1"
#CONNECTION_PORT=3306
#CONNECTION_DATABASE="munkireport"
#CONNECTION_USERNAME="root"
#CONNECTION_PASSWORD=""
#CONNECTION_CHARSET="utf8mb4"
#CONNECTION_COLLATION="utf8mb4_unicode_ci"
#CONNECTION_STRICT=TRUE
#CONNECTION_ENGINE="InnoDB"

# Laravel 7
#DB_CONNECTION=mysql
#DB_HOST=127.0.0.1
#DB_PORT=3306
#DB_DATABASE=laravel
#DB_USERNAME=root
#DB_PASSWORD=

# INDEX_PAGE
# ----------
# Default is index.php? which is the most compatible form.
# You can leave it blank if you want nicer looking urls.
# You will need a server which honors .htaccess (apache) or
# figure out how to rewrite urls in the server of your choice.

INDEX_PAGE="index.php?"  # No such thing in Laravel 7, only use rewrites, dont refer to index.php

# URI_PROTOCOL
# ------------
# $_SERVER variable that contains the correct request path,
# e.g. 'REQUEST_URI', 'QUERY_STRING', 'PATH_INFO', etc.
# defaults to AUTO

URI_PROTOCOL="AUTO"

# WEBHOST
# -------
# The hostname of the webserver, default automatically
# determined. no trailing slash

#WEBHOST="https://munkireport"
#APP_URL="https://munkireport"  # Laravel 7 (Optional)

# SUBDIRECTORY
# ------------
# Relative to the webroot, with trailing slash.
# If you're running munkireport from a subdirectory of a website,
# enter subdir path here. E.g. if munkireport is accessible here:
# http://mysite/munkireport/ you should set subdirectory to
# '/munkireport/'
# If you're using .htaccess to rewrite urls, you should change that too
# The code below is for automagically determining your subdirectory,
# if it fails, just add $conf['subdirectory'] = '/your_sub_dir/' in
# config.php

#SUBDIRECTORY="/munkireport/"

# SITENAME
# --------
# Will appear in the title bar of your browser and as heading on each webpage
#

SITENAME="MunkiReport"  # MunkiReport (kissmvc)
#APP_NAME="MunkiReport"  # Laravel 7

# Hide Non-active Modules
#
# When false, all modules will be shown in the interface like
#	in the 'Listings' menu.
#HIDE_INACTIVE_MODULES=TRUE




# AUTHENTICATION
# --------------
#
# AUTH_METHODS can be one of
# - "NOAUTH": No authentication
# - "LOCAL" : Local Users defined as .yml in the "users" folder
# - "LDAP": LDAP Authentication
# - "AD": Active Directory Authentication
# - Any combination of the above, comma separated.
#
# Authentication providers are checked in this order:
# - Noauth
# - Generated local user
# - LDAP
# - Active Directory


AUTH_METHODS="NOAUTH"

# ACTIVE DIRECTORY AUTHENTICATION
# -------------------------------
#
AUTH_AD_ACCOUNT_SUFFIX="@mydomain.local"
# LDAP_ACCOUNT_SUFFIX="@mydomain.local"  # Laravel 7 via Adldap2-laravel
AUTH_AD_BASE_DN="dc=mydomain,dc=local"
# LDAP_BASE_DN="dc=mydomain,dc=local"  # Laravel 7 via Adldap2-laravel
AUTH_AD_HOSTS="dc01.mydomain.local,dc02.mydomain.local"
# LDAP_HOSTS="dc01.mydomain.local,dc02.mydomain.local"  # Laravel 7 via Adldap2-laravel
AUTH_AD_ALLOWED_USERS="user1,user2"  # No similar option in Adldap2-laravel
AUTH_AD_ALLOWED_GROUPS="group1,group2"  # No similar option in Adldap2-laravel
AUTH_AD_RECURSIVE_GROUPSEARCH=FALSE  # No similar option in Adldap2-laravel

# New items
#LDAP_LOGGING=true  # Log auth attempts to storage/logs
#LDAP_LOGIN_FALLBACK=true  # Allow users to use local accounts if AD/LDAP cannot be reached
#LDAP_PASSWORD_SYNC=false  # Sync AD/LDAP passwords back to local users database. This likely makes you more vulnerable

# RECAPTCHA
# ---------
# Enable reCaptcha Support on the Authentication Form
# Request API keys from https://www.google.com/recaptcha
#
# In Laravel 7, Replaced by https://packagist.org/packages/anhskohbo/no-captcha
RECAPTCHA_LOGIN_PUBLIC_KEY=""
# NOCAPTCHA_SITEKEY=""
RECAPTCHA_LOGIN_PRIVATE_KEY=""
# NOCAPTCHA_SECRET=""

# ROLES
# -----
# Add users or groups to the appropriate roles array.
#
#ROLES_ADMIN="*"

# LOCAL GROUPS
# ------------
# Create local groups, add users to groups.
#
#GROUPS_ADMIN_USERS="user1,user2"

# Set to TRUE to enable Business Units
# For more information, see docs/business_units.md
ENABLE_BUSINESS_UNITS=TRUE

# Force secure connection when authenticating
#
# Set this value to TRUE to force https when logging in.
# This is useful for sites that serve MR both via http and https
AUTH_SECURE=TRUE
# Laravel 7 - There are just too many ways to do this. Prefer forced SSL/TLS termination via httpd server

# If you want to have link that opens a screensharing or SSH
# connection to a client, enable these settings. If you don't
# want the links, set either to an empty string, eg:
# $conf['vnc_link'] = "";
VNC_LINK="vnc://%s:5900"
SSH_LINK="ssh://adminuser@%s"

# Define path to the curl binary and add options
# this is used by the installer script.
# Override to use custom path and add or remove options, some environments
# may need to add "--insecure" if the servercertificate is not to be
# checked.
CURL_CMD="/usr/bin/curl, --fail, --silent, --show-error"

## New variables introduced with Laravel 7

# Control over auth login sessions
SESSION_DRIVER=file
SESSION_LIFETIME=120

# Application environment controls the level of debugging and allows you to switch settings based on environment: dev, prod etc.
APP_ENV=local

# Define these connection details if you are using the Redis Queue driver.
# MunkiReport should work fine with these removed until someone develops a Queue based module.
# The module author should tell you whether you need this.
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

# The default Queue driver, "sync" just doesn't use any Queue and invokes the job right now.
# This is probably not what you want, but it allows people to use Queues without setting anything up.
QUEUE_CONNECTION=sync

# Mailer configuration
# So far, no MunkiReport functionality uses this, but there is an outgoing mail integration available
MAIL_MAILER=smtp
MAIL_HOST=smtp.mailtrap.io
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS=null
MAIL_FROM_NAME="${APP_NAME}"

## ----- Laravel 7 Defaults
APP_ENV=local
APP_KEY=base64:ZZxdn6dbVTL7cpzcmALmsSG0uwa+b07KilEHDweqXyQ=
APP_DEBUG=true

# Laravel logging is very configurable as far as splitting channels and log receivers.
# This variable tells laravel how to log, with the default just being storage/logs/laravel.log
# Take a look at config/logging.php to see different examples of logging forwarding.
LOG_CHANNEL=stack

BROADCAST_DRIVER=log
CACHE_DRIVER=file

# Storage configuration if using S3 Buckets for any reason
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=

# Laravel introduces realtime notifications via Pusher (WebSockets)
# This configuration is for Pusher. If you didn't want SaaS, then please use the redis driver.
PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_APP_CLUSTER=mt1

MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
