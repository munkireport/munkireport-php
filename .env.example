# --------------------------------------------------------------
# munkireport-php phpdotenv configuration file.
#
# Module specific variables should contain the module prefix.
# --------------------------------------------------------------

# DATABASE
# --------
CONNECTION_DRIVER="sqlite"
#CONNECTION_DATABASE="/path/to/your/custom/db/db.sqlite"

#CONNECTION_DRIVER="mysql"
#CONNECTION_HOST="127.0.0.1"
#CONNECTION_PORT=3306
#CONNECTION_DATABASE="munkireport"
#CONNECTION_USERNAME="root"
#CONNECTION_PASSWORD=""
#CONNECTION_CHARSET="utf8mb4"
#CONNECTION_COLLATION="utf8mb4_unicode_ci"
#CONNECTION_STRICT=TRUE
#CONNECTION_ENGINE="InnoDB"

# INDEX_PAGE
# ----------
# Default is index.php? which is the most compatible form.
# You can leave it blank if you want nicer looking urls.
# You will need a server which honors .htaccess (apache) or
# figure out how to rewrite urls in the server of your choice.

INDEX_PAGE="index.php?"

# URI_PROTOCOL
# ------------
# $_SERVER variable that contains the correct request path,
# e.g. 'REQUEST_URI', 'QUERY_STRING', 'PATH_INFO', etc.
# defaults to AUTO

URI_PROTOCOL="AUTO"

# WEBHOST
# -------
# The hostname of the webserver, default automatically
# determined. no trailing slash

#WEBHOST="https://munkireport"

# SUBDIRECTORY
# ------------
# Relative to the webroot, with trailing slash.
# If you're running munkireport from a subdirectory of a website,
# enter subdir path here. E.g. if munkireport is accessible here:
# http://mysite/munkireport/ you should set subdirectory to
# '/munkireport/'
# If you're using .htaccess to rewrite urls, you should change that too
# The code below is for automagically determining your subdirectory,
# if it fails, just add $conf['subdirectory'] = '/your_sub_dir/' in
# config.php

#SUBDIRECTORY="/munkireport/"

# SITENAME
# --------
# Will appear in the title bar of your browser and as heading on each webpage
#

SITENAME="MunkiReport"

# Hide Non-active Modules
#
# When false, all modules will be shown in the interface like
#	in the 'Listings' menu.
#HIDE_INACTIVE_MODULES=TRUE




# AUTHENTICATION
# --------------
#
# AUTH_METHODS can be one of
# - "NOAUTH": No authentication
# - "LOCAL" : Local Users defined as .yml in the "users" folder
# - "LDAP": LDAP Authentication
# - "AD": Active Directory Authentication
# - Any combination of the above, comma separated.
#
# Authentication providers are checked in this order:
# - Noauth
# - Generated local user
# - LDAP
# - Active Directory


AUTH_METHODS="NOAUTH"

# ACTIVE DIRECTORY AUTHENTICATION
# -------------------------------
#
AUTH_AD_ACCOUNT_SUFFIX="@mydomain.local"
AUTH_AD_BASE_DN="dc=mydomain,dc=local"
AUTH_AD_HOSTS="dc01.mydomain.local,dc02.mydomain.local"
AUTH_AD_ALLOWED_USERS="user1,user2"
AUTH_AD_ALLOWED_GROUPS="group1,group2"
AUTH_AD_RECURSIVE_GROUPSEARCH=FALSE

# RECAPTCHA
# ---------
# Enable reCaptcha Support on the Authentication Form
# Request API keys from https://www.google.com/recaptcha
#
RECAPTCHA_LOGIN_PUBLIC_KEY=""
RECAPTCHA_LOGIN_PRIVATE_KEY=""

# ROLES
# -----
# Add users or groups to the appropriate roles array.
#
#ROLES_ADMIN="*"

# LOCAL GROUPS
# ------------
# Create local groups, add users to groups.
#
#GROUPS_ADMIN_USERS="user1,user2"

# Set to TRUE to enable Business Units
# For more information, see docs/business_units.md
ENABLE_BUSINESS_UNITS=TRUE

# Force secure connection when authenticating
#
# Set this value to TRUE to force https when logging in.
# This is useful for sites that serve MR both via http and https
AUTH_SECURE=TRUE

# If you want to have link that opens a screensharing or SSH
# connection to a client, enable these settings. If you don't
# want the links, set either to an empty string, eg:
# $conf['vnc_link'] = "";
VNC_LINK="vnc://%s:5900"
SSH_LINK="ssh://adminuser@%s"

# Define path to the curl binary and add options
# this is used by the installer script.
# Override to use custom path and add or remove options, some environments
# may need to add "--insecure" if the servercertificate is not to be
# checked.
CURL_CMD="/usr/bin/curl, --fail, --silent, --show-error"
