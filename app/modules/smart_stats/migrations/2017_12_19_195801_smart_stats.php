<?php
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Capsule\Manager as Capsule;

class SmartStats extends Migration
{
    private $tableName = 'smart_stats';
    private $tableNameV2 = 'smart_stats_orig';

    public function up()
    {
        $capsule = new Capsule();
        $migrateData = false;

        if ($capsule::schema()->hasTable($this->tableNameV2)) {
            // Migration already failed before, but didnt finish
            throw new Exception("previous failed migration exists");
        }

        if ($capsule::schema()->hasTable($this->tableName)) {
            $capsule::schema()->rename($this->tableName, $this->tableNameV2);
            $migrateData = true;
        }

        $capsule::schema()->create($this->tableName, function (Blueprint $table) {
            $table->increments('id');
            $table->string('serial_number');
            $table->integer('disk_number')->nullable();
            $table->string('model_family')->nullable();
            $table->string('device_model')->nullable();
            $table->string('serial_number_hdd')->nullable();
            $table->string('lu_wwn_device_id')->nullable();
            $table->string('firmware_version')->nullable();
            $table->string('user_capacity')->nullable();
            $table->string('sector_size')->nullable();
            $table->string('rotation_rate')->nullable();
            $table->string('device_is')->nullable();
            $table->string('ata_version_is')->nullable();
            $table->string('sata_version_is')->nullable();
            $table->string('form_factor')->nullable();
            $table->string('smart_support_is')->nullable();
            $table->string('smart_is')->nullable();
            $table->integer('error_count')->nullable();
            $table->integer('error_poh')->nullable();
            $table->bigInteger('timestamp')->nullable();
            $table->bigInteger('raw_read_error_rate')->nullable();
            $table->bigInteger('throughput_performance')->nullable();
            $table->bigInteger('spin_up_time')->nullable();
            $table->bigInteger('start_stop_count')->nullable();
            $table->bigInteger('reallocated_sector_ct')->nullable();
            $table->bigInteger('read_channel_margin')->nullable();
            $table->bigInteger('seek_error_rate')->nullable();
            $table->bigInteger('seek_time_performance')->nullable();
            $table->bigInteger('power_on_hours')->nullable();
            $table->string('power_on_hours_and_msec')->nullable();
            $table->bigInteger('spin_retry_count')->nullable();
            $table->bigInteger('calibration_retry_count')->nullable();
            $table->bigInteger('power_cycle_count')->nullable();
            $table->bigInteger('read_soft_error_rate')->nullable();
            $table->bigInteger('program_fail_count_chip')->nullable();
            $table->bigInteger('erase_fail_count_chip')->nullable();
            $table->bigInteger('wear_leveling_count')->nullable();
            $table->bigInteger('used_rsvd_blk_cnt_chip')->nullable();
            $table->bigInteger('used_rsvd_blk_cnt_tot')->nullable();
            $table->bigInteger('unused_rsvd_blk_cnt_tot')->nullable();
            $table->bigInteger('program_fail_cnt_total')->nullable();
            $table->bigInteger('erase_fail_count_total')->nullable();
            $table->bigInteger('runtime_bad_block')->nullable();
            $table->bigInteger('endtoend_error')->nullable();
            $table->bigInteger('reported_uncorrect')->nullable();
            $table->bigInteger('command_timeout')->nullable();
            $table->bigInteger('high_fly_writes')->nullable();
            $table->string('airflow_temperature_cel')->nullable();
            $table->bigInteger('gsense_error_rate')->nullable();
            $table->bigInteger('poweroff_retract_count')->nullable();
            $table->bigInteger('load_cycle_count')->nullable();
            $table->string('temperature_celsius')->nullable();
            $table->bigInteger('hardware_ecc_recovered')->nullable();
            $table->bigInteger('reallocated_event_count')->nullable();
            $table->bigInteger('current_pending_sector')->nullable();
            $table->bigInteger('offline_uncorrectable')->nullable();
            $table->bigInteger('udma_crc_error_count')->nullable();
            $table->bigInteger('multi_zone_error_rate')->nullable();
            $table->bigInteger('soft_read_error_rate')->nullable();
            $table->bigInteger('data_address_mark_errs')->nullable();
            $table->bigInteger('run_out_cancel')->nullable();
            $table->bigInteger('soft_ecc_correction')->nullable();
            $table->bigInteger('thermal_asperity_rate')->nullable();
            $table->bigInteger('flying_height')->nullable();
            $table->bigInteger('spin_high_current')->nullable();
            $table->bigInteger('spin_buzz')->nullable();
            $table->bigInteger('offline_seek_performnce')->nullable();
            $table->bigInteger('disk_shift')->nullable();
            $table->bigInteger('loaded_hours')->nullable();
            $table->bigInteger('load_retry_count')->nullable();
            $table->bigInteger('load_friction')->nullable();
            $table->bigInteger('loadin_time')->nullable();
            $table->bigInteger('torqamp_count')->nullable();
            $table->bigInteger('head_amplitude')->nullable();
            $table->bigInteger('available_reservd_space')->nullable();
            $table->bigInteger('media_wearout_indicator')->nullable();
            $table->bigInteger('head_flying_hours')->nullable();
            $table->bigInteger('total_lbas_written')->nullable();
            $table->bigInteger('total_lbas_read')->nullable();
            $table->bigInteger('read_error_retry_rate')->nullable();
            $table->bigInteger('free_fall_sensor')->nullable();
            $table->bigInteger('host_reads_mib')->nullable();
            $table->bigInteger('host_writes_mib')->nullable();
            $table->bigInteger('grown_failing_block_ct')->nullable();
            $table->bigInteger('unexpect_power_loss_ct')->nullable();
            $table->bigInteger('non4k_aligned_access')->nullable();
            $table->bigInteger('sata_iface_downshift')->nullable();
            $table->bigInteger('factory_bad_block_ct')->nullable();
            $table->bigInteger('percent_lifetime_used')->nullable();
            $table->bigInteger('write_error_rate')->nullable();
            $table->bigInteger('success_rain_recov_cnt')->nullable();
            $table->bigInteger('total_host_sector_write')->nullable();
            $table->bigInteger('host_program_page_count')->nullable();
            $table->bigInteger('bckgnd_program_page_cnt')->nullable();
            $table->bigInteger('perc_rated_life_used')->nullable();
            $table->bigInteger('reallocate_nand_blk_cnt')->nullable();
            $table->bigInteger('ave_blockerase_count')->nullable();
            $table->bigInteger('Unused_Reserve_NAND_Blk')->nullable();
            $table->bigInteger('sata_interfac_downshift')->nullable();
            $table->bigInteger('ssd_life_left')->nullable();
            $table->bigInteger('life_curve_status')->nullable();
            $table->bigInteger('supercap_health')->nullable();
            $table->bigInteger('lifetime_writes_gib')->nullable();
            $table->bigInteger('lifetime_reads_gib')->nullable();
            $table->bigInteger('uncorrectable_error_cnt')->nullable();
            $table->bigInteger('ecc_error_eate')->nullable();
            $table->bigInteger('crc_error_count')->nullable();
            $table->bigInteger('supercap_status')->nullable();
            $table->bigInteger('exception_mode_status')->nullable();
            $table->bigInteger('por_recovery_count')->nullable();
            $table->bigInteger('total_reads_gib')->nullable();
            $table->bigInteger('total_writes_gib')->nullable();
            $table->bigInteger('thermal_throttle')->nullable();
            $table->bigInteger('perc_writeerase_count')->nullable();
            $table->bigInteger('perc_avail_resrvd_space')->nullable();
            $table->bigInteger('perc_writeerase_ct_bc')->nullable();
            $table->bigInteger('avg_writeerase_count')->nullable();
            $table->bigInteger('sata_phy_error')->nullable();
            $table->string('overall_health')->nullable();
            $table->string('pci_vender_subsystem_id')->nullable();
            $table->string('model_number')->nullable();
            $table->integer('temperature_nvme')->nullable();
            $table->integer('power_on_hours_nvme')->nullable();
            $table->integer('power_cycle_count_nvme')->nullable();
            $table->string('critical_warning')->nullable();
            $table->bigInteger('available_spare')->nullable();
            $table->bigInteger('available_spare_threshold')->nullable();
            $table->bigInteger('percentage_used')->nullable();
            $table->string('data_units_read')->nullable();
            $table->string('data_units_written')->nullable();
            $table->bigInteger('host_read_commands')->nullable();
            $table->bigInteger('host_write_commands')->nullable();
            $table->bigInteger('controller_busy_time')->nullable();
            $table->bigInteger('unsafe_shutdowns')->nullable();
            $table->bigInteger('media_data_integrity_errors')->nullable();
            $table->bigInteger('error_info_log_entries')->nullable();
            $table->string('ieee_oui_id')->nullable();
            $table->bigInteger('controller_id')->nullable();
            $table->bigInteger('number_of_namespaces')->nullable();
            $table->string('firmware_updates')->nullable();
            $table->text('optional_admin_commands')->nullable();
            $table->text('optional_nvm_commands')->nullable();
            $table->string('max_data_transfer_size')->nullable();
        });

        if ($migrateData) {
            $capsule::unprepared("INSERT INTO 
                $this->tableName
            SELECT
                id,
                serial_number,
                disk_number,
                model_family,
                device_model,
                serial_number_hdd,
                lu_wwn_device_id,
                firmware_version,
                user_capacity,
                sector_size,
                rotation_rate,
                device_is,
                ata_version_is,
                sata_version_is,
                form_factor,
                smart_support_is,
                smart_is,
                error_count,
                error_poh,
                timestamp,
                raw_read_error_rate,
                throughput_performance,
                spin_up_time,
                start_stop_count,
                reallocated_sector_ct,
                read_channel_margin,
                seek_error_rate,
                seek_time_performance,
                power_on_hours,
                power_on_hours_and_msec,
                spin_retry_count,
                calibration_retry_count,
                power_cycle_count,
                read_soft_error_rate,
                program_fail_count_chip,
                erase_fail_count_chip,
                wear_leveling_count,
                used_rsvd_blk_cnt_chip,
                used_rsvd_blk_cnt_tot,
                unused_rsvd_blk_cnt_tot,
                program_fail_cnt_total,
                erase_fail_count_total,
                runtime_bad_block,
                endtoend_error,
                reported_uncorrect,
                command_timeout,
                high_fly_writes,
                airflow_temperature_cel,
                gsense_error_rate,
                poweroff_retract_count,
                load_cycle_count,
                temperature_celsius,
                hardware_ecc_recovered,
                reallocated_event_count,
                current_pending_sector,
                offline_uncorrectable,
                udma_crc_error_count,
                multi_zone_error_rate,
                soft_read_error_rate,
                data_address_mark_errs,
                run_out_cancel,
                soft_ecc_correction,
                thermal_asperity_rate,
                flying_height,
                spin_high_current,
                spin_buzz,
                offline_seek_performnce,
                disk_shift,
                loaded_hours,
                load_retry_count,
                load_friction,
                loadin_time,
                torqamp_count,
                head_amplitude,
                available_reservd_space,
                media_wearout_indicator,
                head_flying_hours,
                total_lbas_written,
                total_lbas_read,
                read_error_retry_rate,
                free_fall_sensor,
                host_reads_mib,
                host_writes_mib,
                grown_failing_block_ct,
                unexpect_power_loss_ct,
                non4k_aligned_access,
                sata_iface_downshift,
                factory_bad_block_ct,
                percent_lifetime_used,
                write_error_rate,
                success_rain_recov_cnt,
                total_host_sector_write,
                host_program_page_count,
                bckgnd_program_page_cnt,
                perc_rated_life_used,
                reallocate_nand_blk_cnt,
                ave_blockerase_count,
                Unused_Reserve_NAND_Blk,
                sata_interfac_downshift,
                ssd_life_left,
                life_curve_status,
                supercap_health,
                lifetime_writes_gib,
                lifetime_reads_gib,
                uncorrectable_error_cnt,
                ecc_error_eate,
                crc_error_count,
                supercap_status,
                exception_mode_status,
                por_recovery_count,
                total_reads_gib,
                total_writes_gib,
                thermal_throttle,
                perc_writeerase_count,
                perc_avail_resrvd_space,
                perc_writeerase_ct_bc,
                avg_writeerase_count,
                sata_phy_error,
                overall_health,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null
            FROM
                $this->tableNameV2");
            $capsule::schema()->drop($this->tableNameV2);
        }

        // (Re)create indexes
        $capsule::schema()->table($this->tableName, function (Blueprint $table) {
            $table->index('serial_number');
            $table->index('disk_number');
            $table->index('power_on_hours_and_msec');
            $table->index('power_on_hours');
            $table->index('model_family');
            $table->index('device_model');
            $table->index('serial_number_hdd');
            $table->index('lu_wwn_device_id');
            $table->index('firmware_version');
            $table->index('user_capacity');
            $table->index('sector_size');
            $table->index('rotation_rate');
            $table->index('device_is');
            $table->index('ata_version_is');
            $table->index('sata_version_is');
            $table->index('form_factor');
            $table->index('smart_support_is');
            $table->index('smart_is');
            $table->index('error_count');
            $table->index('error_poh');
            $table->index('timestamp');
            $table->index('overall_health');
        });
    }
    
    public function down()
    {
        $capsule = new Capsule();
        $capsule::schema()->dropIfExists($this->tableName);
        if ($capsule::schema()->hasTable($this->tableNameV2)) {
            $capsule::schema()->rename($this->tableNameV2, $this->tableName);
        }
    }
}
