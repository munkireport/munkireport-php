"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A datetime and timezone string in ISO 8601 format `Y-m-dTH:i:sO`, e.g. `2020-04-20T13:53:12+02:00`."
scalar DateTimeTz @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTimeTz")

type Query {
    me: User @auth
}

extend type Query @guard {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    usersSearch(name: String! @where(operator: "like")): [User!]! @all
    machines: [Machine!]! @paginate(defaultCount: 50)
    machine(id: ID @eq): Machine @find
    reportData: [ReportData!]! @paginate(defaultCount: 50)
    reportDatum(id: ID @eq): ReportData @find
    businessUnits: [BusinessUnit!]! @paginate(defaultCount: 50)
    businessUnit(id: ID @eq): BusinessUnit @find
    machineGroups: [MachineGroup!]! @paginate(defaultCount: 50)
    comments: [Comment]! @paginate(defaultCount: 50)
    events: [Event]! @paginate(defaultCount: 50)
    tags: [Tag]! @paginate(defaultCount: 50)
}

#import machinegroup.graphql
#import businessunit.graphql
#import user.graphql
#import reportdata.graphql
#import machine.graphql
#import comment.graphql
#import event.graphql
#import tag.graphql

type Mutation @guard {
    createBusinessUnit(name: String!, address: String, link: String): BusinessUnit! @create
    updateBusinessUnit(id: ID!, name: String, address: String, link: String): BusinessUnit @update
    updateBusinessUnitRelationships(input: UpdateBusinessUnitRelationshipsInput! @spread): BusinessUnit @update
    deleteBusinessUnit(id: ID!): BusinessUnit @delete
}
